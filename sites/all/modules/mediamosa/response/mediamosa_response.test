<?php
/**
 * @file
 * Response object automated test.
 */

class MediaMosaResponseTestCase extends MediaMosaTestCase {

  // ------------------------------------------------------------------ Members.

  // ------------------------------------------------------------------ Functions.
  public static function getInfo() {
    return array(
      'name' => 'MediaMosa - Response object',
      'description' => 'Test the output of the response object.',
      'group' => MEDIAMOSA_TEST_GROUP_MEDIAMOSA_CORE,
    );
  }

  public function testResponseXML() {

    // Check we are in simpletest mode.
    $this->assertTrue(mediamosa::in_simpletest_sandbox(), 'We are in SimpleTest mode');
    $this->assertTrue(mediamosa::is_app_enabled(), 'We are allowed to do REST calls on interface');
    $this->assertTrue(mediamosa::is_app_app_enabled(), 'We are allowed to do APP REST calls on interface');
    $this->assertTrue(mediamosa::is_app_download_enabled(), 'We are allowed to do download REST calls on interface');
    $this->assertTrue(mediamosa::is_app_upload_enabled(), 'We are allowed to do upload REST calls on interface');
    $this->assertTrue(mediamosa::is_app_openapi_enabled(), 'We are allowed to do openAPI calls on interface');

    // At the end; the Greek word 'kosme':
    $parameters = array(
      'foo' => 'bla' . chr(1) . 'goo' . '≴' . 'foo' . 'κόσμε',
    );

    // Do response.
    $response = $this->restCallGet('version', $parameters);

    // Show the xml.
    $this->var_export($response['xml']);

    $foo = '';
    $allowed_chars = array(0x09, 0x0A, 0x0D);
    foreach ($allowed_chars as $char) {
      $foo .= chr($char);
    }

    $parameters = array(
      'foo' => $foo,
    );

    // Do response.
    $response = $this->restCallGet('version', $parameters);
/*
    // Show the xml.
    $this->var_export($response['xml']);

    $len = mediamosa_unicode::strlen('[GET] version?foo=');

    // Make sure these are not translated to ?.
    $this->assertTrue(mediamosa_unicode::substr((string)$response['xml']['header']['request_uri'], $len) == $foo);

    $this->var_export((string)$response['xml']['header']['request_uri']);*/
  }
}
