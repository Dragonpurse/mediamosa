<?php
/**
 * @file
 * Audio tool module.
 */

/**
 * Implements hook_permission().
 */
function mediamosa_tool_audio_permission() {
  return array(
    'access mediamosa tool audio' => array(
      'title' => t('Access MediaMosa Tool module for Audio toolset'),
      'description' => t('Enables the user to use the Audio toolset.'),
    ),
  );
}

/**
 * Implements hook_mediamosa_tool_info().
 */
function mediamosa_tool_audio_mediamosa_tool_info() {
  return array(
    mediamosa_tool_audio::NAME => array(
      'name' => t('Audio'),
      'description' => t('The tool for converting audio files.'),
    ));
}

/**
 * Implements hook_mediamosa_tool_can_analyse().
 */
function mediamosa_tool_audio_mediamosa_tool_can_analyse($mime_type) {
  return mediamosa_tool_audio::is_supported($mime_type);
}

/**
 * Implements hook_mediamosa_tool_analyse().
 */
function mediamosa_tool_audio_mediamosa_tool_analyse($mediafile_id) {

  // Analyse of audio files is done by the ffmpeg toolset.
  return mediamosa_tool_ffmpeg_mediamosa_tool_analyse($mediafile_id);
}

/**
 * Implements hook_mediamosa_tool_can_generate_still().
 */
function mediamosa_tool_audio_mediamosa_tool_can_generate_still($mime_type) {
  return mediamosa_tool_audio::is_supported($mime_type);
}

/**
 * Implements hook_mediamosa_tool_get_generate_still_exec().
 */
function mediamosa_tool_audio_mediamosa_tool_get_generate_still_exec($job_info, $mediafile_id_source) {
  return mediamosa_tool_audio::get_generate_still_exec($job_info, $mediafile_id_source);
}

/**
 * Implements hook_mediamosa_tool_mapping().
 */
function mediamosa_tool_audio_mediamosa_tool_mapping() {
  // @todo: ffmpeg?
  return mediamosa_tool_params::get_by_tool(mediamosa_tool_audio::NAME);
}

/**
 * Implements hook_mediamosa_tool_param_checking().
 */
function mediamosa_tool_audio_mediamosa_tool_param_checking($nice_parameter, $value) {
  // @todo: ffmpeg?
  mediamosa_tool_params::check_mapping(mediamosa_tool_audio::NAME, $nice_parameter, $value);
}
