<?php
/**
 * @file
 * Default test.
 */

class MediaMosaSolrStemmingTestCaseEga extends MediaMosaTestCaseEgaJob {
  // ------------------------------------------------------------------ Members.

  // ------------------------------------------------------------------ Functions.
  public static function getInfo() {
    return array(
      'name' => 'SOLR - stemming tests',
      'description' => 'Specific tests for stemming and language detection.',
      'group' => 'MediaMosa Solr',
      'automatic_run_disabled' => module_exists('mediamosa_solr') ? FALSE : TRUE,
    );
  }

  /**
   * Make sure SOLR is on.
   */
  public static function mediamosa_run_enabled() {
    return module_exists('mediamosa_solr') ? TRUE : FALSE;
  }

  /**
   * Implements setUp().
   */
  protected function setUp() {
    // Get Solr url from parent install.
    $mediamosa_solr_url = mediamosa_solr_apache_solr_service::mediamosaGetUrl();

    // Change app timezones to UTC default.
    $this->default_timezone = mediamosa_settings::MEDIAMOSA_DEFAULT_TIMEZONE_INTERNAL;

    // Run parent first so we are inside sandbox.
    // Call parent::setUp and preserve arguments.
    $args = func_get_args();

    $args = array_unique(array_merge(array(
      'mediamosa_solr',
    ), $args));

    // PHP 5.3 does not allow to use $this as we do here.
    if (drupal_substr(phpversion(), 0, 3) < '5.3') {
      call_user_func_array(array($this, 'parent::setUp'), $args);
    }
    else {
      call_user_func_array('parent::setUp', $args);
    }

    // Solr set url.
    variable_set('mediamosa_solr_url', $mediamosa_solr_url);

    // Turn on Solr as search engine.
    variable_set('mediamosa_search_engine', 'mediamosa_solr');
  }

  /**
   * Implements tearDown().
   */
  protected function tearDown() {

    $app_ids = array();
    if (!empty($this->a_app['app_id'])) {
      $app_ids[] = $this->a_app['app_id'];
    }
    if (!empty($this->a_app_2['app_id'])) {
      $app_ids[] = $this->a_app_2['app_id'];
    }
    if (!empty($this->a_app_3['app_id'])) {
      $app_ids[] = $this->a_app_3['app_id'];
    }

    // Teardown first (else teardown will sync assets sometimes to SOLR).
    parent::tearDown();

    // Remove it.
    if (!empty($app_ids)) {
      mediamosa_solr::delete_simpletest_documents($app_ids);
    }
  }

  // ------------------------------------------------------------------ Tests.
  public function testBasic() {

    $this->var_export(mediamosa_search::get_search_engine());

    // Make sure the instanty settings are all on by default.
    $this->assertTrue(mediamosa_solr::settingInstantlyMetadata(), 'Metadata setting instant');
    $this->assertTrue(mediamosa_solr::settingInstantlyAssetUpdate(), 'Asset update setting instant');

    // Setup simple search stuff
    $upload_1 = $this->uploadTestFile();
    $upload_2 = $this->uploadTestFile(array('filename' => $this->getTestVideo_ogg()));
    $upload_3 = $this->uploadTestFile(array('filename' => $this->getTestVideo_BlackStill()));
    $upload_4 = $this->uploadTestFile();

    // Create transcode for all.

    // Create transcode job.
    $this->createMediafileTranscode($upload_1['mediafile_id']);
    $this->createMediafileTranscode($upload_2['mediafile_id']);
    $this->createMediafileTranscode($upload_3['mediafile_id']);

    // Parse the queue.
    $this->doQueueCycleAll();

    // Create asset metadata.
    $this->createAssetMetadata($upload_1['asset_id'],
      array(
        'title' => 'Ik zat op school',
        'description' => '~asset number 1',
        'issued' => '2010-01-01 00:00:00',
        'titel' => '2010-01-01 00:00:00',
        'beschrijving' => 'SURFguest.rocvideo',
      )
    );
    $this->createAssetMetadata($upload_2['asset_id'],
      array(
        'title' => 'Er zijn veel scholen',
        'description' => 'asset~ number 2',
        'issued' => '2009-01-01 00:00:00',
        'titel' => '2009-01-01 00:00:00',
        'beschrijving' => 'sURFguest.rocvideo',
      )
    );
    $this->createAssetMetadata($upload_3['asset_id'],
      array(
        'title' => 'In de zee zwemt een scholvis',
        'description' => 'asset ~number~ 3',
        'issued' => '2010-08-01 00:00:00',
        'titel' => '2010-08-01 00:00:00',
        'beschrijving' => 'SURFfoo.rocvideo',
      )
    );

    $this->cql_do_search_test_assets_1('title = "school"', array($upload_1['asset_id'] => TRUE));

    $this->cql_do_search_test_assets_1('title =/stem "school"', array($upload_1['asset_id'] => TRUE, $upload_2['asset_id'] => TRUE));
  }
}
